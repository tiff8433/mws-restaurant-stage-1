{"version":3,"sources":["service-worker.js"],"names":["CACHE_VERSION","CACHE_FILES","i","prefix","push","self","addEventListener","event","console","log","waitUntil","caches","open","then","cache","addAll","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete","request","url","req","includes","Request","respondWith","match","response","fetch","put","clone","catch","error","Response","status","statusText"],"mappings":"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","file":"service-worker.map","sourceRoot":"..","sourcesContent":["// from https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/\nconst CACHE_VERSION = \"mws-apps-v2\";\nlet CACHE_FILES = [\n    \"/\",\n    \"/index.html\",\n    \"/restaurant.html\",\n    \"/register.js\",\n    \"/css/styles.css\",\n    \"/js/dbhelper.js\",\n    \"/js/main.js\",\n    \"/js/restaurant_info.js\"\n];\n\n// add images to files to cache\nfor (let i = 1; i < 11; i++) {\n    const prefix = `/images/${i}`;\n    CACHE_FILES.push(`${prefix}-320x240.jpg`);\n    CACHE_FILES.push(`${prefix}-1600_large_2x.jpg`);\n    CACHE_FILES.push(`${prefix}-large.jpg`);\n};\n\n// Listen for install event, set callback\nself.addEventListener('install', (event) => {\n    console.log(`Attempting to install service worker and cache static assets ${CACHE_VERSION}`);\n    event.waitUntil(\n        caches.open(CACHE_VERSION)\n            .then((cache) => {\n                console.log('Opened cache');\n                return cache.addAll(CACHE_FILES);\n            })\n    );\n});\n\n\nself.addEventListener('activate', (event) => {\n    // Perform some task\n    console.log('Activating new service worker...');\n\n    const cacheWhitelist = [CACHE_VERSION];\n\n    event.waitUntil(\n        caches.keys().then((cacheNames) => {\n            return Promise.all(\n                cacheNames.map((cacheName) => {\n                    if (cacheWhitelist.indexOf(cacheName) === -1) {\n                        return caches.delete(cacheName);\n                    }\n                })\n            );\n        })\n    );\n});\n\nself.addEventListener('fetch', (event) => {\n    console.log('Fetch event for ', event.request.url);\n    let req = event.request;\n    if (event.request.url.includes(\"restaurant.html\")) {\n        const url = \"restaurant.html\";\n        req = new Request(url);\n    }\n    event.respondWith(\n      caches.match(event.request).then((response) => {\n        if (response) {\n          console.log('Found ', event.request.url, ' in cache');\n          return response;\n        }\n        console.log('Network request for ', event.request.url);\n        return fetch(event.request).then((response) => {\n          \n            return caches.open(CACHE_VERSION).then((cache) => {\n              if (event.request.url.indexOf('test') < 0) {\n                cache.put(event.request.url, response.clone());\n              }\n              return response;\n            });\n          });\n  \n      }).catch((error) => {\n        return new Response(\"Error page not found\", {status: 404, statusText: \"Error page not found\"});\n      })\n    );\n});"]}