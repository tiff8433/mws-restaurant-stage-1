{"version":3,"sources":["js/main.js"],"names":["restaurants","neighborhoods","cuisines","newMap","markers","document","addEventListener","event","initMap","fetchNeighborhoods","fetchCuisines","DBHelper","error","console","self","fillNeighborhoodsHTML","select","getElementById","setAttribute","forEach","neighborhood","option","createElement","innerHTML","value","append","fillCuisinesHTML","cuisine","L","map","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","id","addTo","updateRestaurants","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","ul","marker","remove","div","restaurant","createRestaurantHTML","addMarkersToMap","divWrapper","classList","add","picture","image","className","pathPrefix","imageUrlForRestaurant","src","smSrc","media","srcset","lgSrc","alt","name","appendChild","address","href","urlForRestaurant","mapMarkerForRestaurant","on","onClick","window","location","options","url","push"],"mappings":"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","file":"main.fb6bbcaf.map","sourceRoot":"..","sourcesContent":["let restaurants,\r\n  neighborhoods,\r\n  cuisines\r\nvar newMap\r\nvar markers = []\r\n\r\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  initMap(); // added \r\n  fetchNeighborhoods();\r\n  fetchCuisines();\r\n});\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\nfetchNeighborhoods = () => {\r\n  DBHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n    if (error) { // Got an error\r\n      console.error(error);\r\n    } else {\r\n      self.neighborhoods = neighborhoods;\r\n      fillNeighborhoodsHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nfillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById('neighborhoods-select');\r\n  select.setAttribute('aria-label', \"neighborhood select\");\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\nfetchCuisines = () => {\r\n  DBHelper.fetchCuisines((error, cuisines) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.cuisines = cuisines;\r\n      fillCuisinesHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nfillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById('cuisines-select');\r\n  select.setAttribute('aria-label', \"cuisines select\");\r\n\r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Initialize leaflet map, called from HTML.\r\n */\r\ninitMap = () => {\r\n  self.newMap = L.map('map', {\r\n        center: [40.722216, -73.987501],\r\n        zoom: 12,\r\n        scrollWheelZoom: false\r\n      });\r\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\r\n    mapboxToken: 'pk.eyJ1IjoidGlmZmFueWgxMDEiLCJhIjoiY2ppcTltYWdjMDB4dTNsbzF2MTBrd3U5NyJ9.p99H31XzJEgUSu1jJYRZDg',\r\n    maxZoom: 18,\r\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n      '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n      'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n    id: 'mapbox.streets'\r\n  }).addTo(newMap);\r\n\r\n  updateRestaurants();\r\n}\r\n/* window.initMap = () => {\r\n  let loc = {\r\n    lat: 40.722216,\r\n    lng: -73.987501\r\n  };\r\n  self.map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: loc,\r\n    scrollwheel: false\r\n  });\r\n  updateRestaurants();\r\n} */\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nupdateRestaurants = () => {\r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n\r\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      resetRestaurants(restaurants);\r\n      fillRestaurantsHTML();\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nresetRestaurants = (restaurants) => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById('restaurants-list');\r\n  ul.innerHTML = '';\r\n\r\n  // Remove all map markers\r\n  if (self.markers) {\r\n    self.markers.forEach(marker => marker.remove());\r\n  }\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n}\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nfillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const div = document.getElementById('restaurants-list');\r\n  restaurants.forEach(restaurant => {\r\n    div.append(createRestaurantHTML(restaurant));\r\n  });\r\n  addMarkersToMap();\r\n}\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\ncreateRestaurantHTML = (restaurant) => {\r\n  const divWrapper = document.createElement('div');\r\n  divWrapper.classList.add(\"restaurant-element\");\r\n\r\n  const div = document.createElement('a')\r\n  divWrapper.append(div);\r\n\r\n  const picture = document.createElement('picture');\r\n  \r\n  const image = document.createElement('img');\r\n  image.className = 'restaurant-img';\r\n  pathPrefix = DBHelper.imageUrlForRestaurant(restaurant);\r\n  image.src = `${pathPrefix}-large.jpg`;\r\n  \r\n  const smSrc = document.createElement('source');\r\n  smSrc.media = '(max-width: 450px)';\r\n  smSrc.srcset = `${pathPrefix}-320x240.jpg`;\r\n  \r\n  \r\n  const lgSrc = document.createElement('source');\r\n  lgSrc.media = '(min-width: 751px)';\r\n  lgSrc.srcset = `${pathPrefix}-large.jpg, ${pathPrefix}-1600_large_2x.jpg 2x`;\r\n  \r\n  image.alt = smSrc.alt = lgSrc.alt = restaurant.name;\r\n  picture.appendChild(smSrc);\r\n  picture.appendChild(lgSrc);\r\n  picture.appendChild(image);\r\n  div.append(picture);\r\n\r\n\r\n  const name = document.createElement('h2');\r\n  name.innerHTML = restaurant.name;\r\n  div.append(name);\r\n\r\n  const neighborhood = document.createElement('p');\r\n  neighborhood.innerHTML = restaurant.neighborhood;\r\n  div.append(neighborhood);\r\n\r\n  const address = document.createElement('p');\r\n  address.innerHTML = restaurant.address;\r\n  div.append(address);\r\n\r\n  // const more = document.createElement('a');\r\n  // more.innerHTML = 'View Details';\r\n  div.href = DBHelper.urlForRestaurant(restaurant);\r\n  // div.append(more)\r\n\r\n  return divWrapper;\r\n}\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\naddMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.newMap);\r\n    marker.on(\"click\", onClick);\r\n    function onClick() {\r\n      window.location.href = marker.options.url;\r\n    }\r\n    self.markers.push(marker);\r\n  });\r\n\r\n} \r\n/* addMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      window.location.href = marker.url\r\n    });\r\n    self.markers.push(marker);\r\n  });\r\n} */\r\n\r\n"]}