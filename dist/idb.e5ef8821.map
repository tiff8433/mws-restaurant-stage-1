{"version":3,"sources":["js/idb/index.js"],"names":["dbPromise","idb","open","upgradeDb","console","log","oldVersion","restaurantStore","createObjectStore","createIndex","idbHelper","get","dbName","key","then","db","transaction","objectStore","set","val","tx","put","complete","delete","clear","keys","store","iterateKeyCursor","iterateCursor","call","cursor","push","continue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;AACA,IAAMA,SAAS,GAAGC,GAAG,CAACC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,UAACC,SAAD,EAAe;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,UAAOF,SAAS,CAACG,UAAjB;AACI,SAAK,CAAL;AACI,UAAMC,eAAe,GAAGJ,SAAS,CAACK,iBAAV,CAA4B,YAA5B,CAAxB;AACAD,MAAAA,eAAe,CAACE,WAAhB,CAA4B,MAA5B;AAHR;AAMH,CARiB,CAAlB;AAUA,IAAMC,SAAS,GAAG;AACdC,EAAAA,GADc,eACVC,MADU,EACFC,GADE,EACG;AACb,WAAOb,SAAS,CAACc,IAAV,CAAe,UAAAC,EAAE,EAAI;AACxBA,MAAAA,EAAE,CAACC,WAAH,CAAeJ,MAAf,EACKK,WADL,CACiBL,MADjB,EACyBD,GADzB,CAC6BE,GAD7B;AAEH,KAHM,CAAP;AAIH,GANa;AAOdK,EAAAA,GAPc,eAOVN,MAPU,EAOFC,GAPE,EAOGM,GAPH,EAOQ;AAClBf,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,GAAvB,EAA4BM,GAA5B,EAAiC,IAAjC,EAAuCP,MAAvC;AACA,WAAOZ,SAAS,CAACc,IAAV,CAAe,UAAAC,EAAE,EAAI;AACxB,UAAMK,EAAE,GAAGL,EAAE,CAACC,WAAH,CAAeJ,MAAf,EAAuB,WAAvB,CAAX;AACAQ,MAAAA,EAAE,CAACH,WAAH,CAAeL,MAAf,EAAuBS,GAAvB,CAA2BF,GAA3B,EAAgCN,GAAhC;AACA,aAAOO,EAAE,CAACE,QAAV;AACH,KAJM,CAAP;AAKH,GAda;AAedC,EAAAA,MAfc,mBAePX,MAfO,EAeCC,GAfD,EAeM;AAChB,WAAOb,SAAS,CAACc,IAAV,CAAe,UAAAC,EAAE,EAAI;AACxB,UAAMK,EAAE,GAAGL,EAAE,CAACC,WAAH,CAAeJ,MAAf,EAAuB,WAAvB,CAAX;AACAQ,MAAAA,EAAE,CAACH,WAAH,CAAeL,MAAf,EAAuBW,MAAvB,CAA8BV,GAA9B;AACA,aAAOO,EAAE,CAACE,QAAV;AACH,KAJM,CAAP;AAKH,GArBa;AAsBdE,EAAAA,KAtBc,mBAsBN;AACJ,WAAOxB,SAAS,CAACc,IAAV,CAAe,UAAAC,EAAE,EAAI;AACxB,UAAMK,EAAE,GAAGL,EAAE,CAACC,WAAH,CAAeJ,MAAf,EAAuB,WAAvB,CAAX;AACAQ,MAAAA,EAAE,CAACH,WAAH,CAAeL,MAAf,EAAuBY,KAAvB;AACA,aAAOJ,EAAE,CAACE,QAAV;AACH,KAJM,CAAP;AAKH,GA5Ba;AA6BdG,EAAAA,IA7Bc,kBA6BP;AACH,WAAOzB,SAAS,CAACc,IAAV,CAAe,UAAAC,EAAE,EAAI;AACxB,UAAMK,EAAE,GAAGL,EAAE,CAACC,WAAH,CAAeJ,MAAf,CAAX;AACA,UAAMa,IAAI,GAAG,EAAb;AACA,UAAMC,KAAK,GAAGN,EAAE,CAACH,WAAH,CAAeL,MAAf,CAAd;AAEA,OAACc,KAAK,CAACC,gBAAN,IAA0BD,KAAK,CAACE,aAAjC,EAAgDC,IAAhD,CAAqDH,KAArD,EAA4D,UAAAI,MAAM,EAAI;AAClE,YAAI,CAACA,MAAL,EAAa;AACbL,QAAAA,IAAI,CAACM,IAAL,CAAUD,MAAM,CAACjB,GAAjB;AACAiB,QAAAA,MAAM,CAACE,QAAP;AACH,OAJD;AAKA,aAAOZ,EAAE,CAACE,QAAH,CAAYR,IAAZ,CAAiB;AAAA,eAAMW,IAAN;AAAA,OAAjB,CAAP;AACH,KAXM,CAAP;AAYH;AA1Ca,CAAlB,EA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"idb.e5ef8821.map","sourceRoot":"..","sourcesContent":["import images from '../../images/*.jpg';\n\n// set up db store\nconst dbPromise = idb.open('db', 1, (upgradeDb) => {\n    console.log('creating dbPromise');\n    switch(upgradeDb.oldVersion) {\n        case 1:\n            const restaurantStore = upgradeDb.createObjectStore('restaurant');\n            restaurantStore.createIndex('name');\n\n    }\n});\n\nconst idbHelper = {\n    get(dbName, key) {\n        return dbPromise.then(db => {\n            db.transaction(dbName)\n                .objectStore(dbName).get(key)\n        });\n    },\n    set(dbName, key, val) {\n        console.log('SETTING', key, val, 'on', dbName);\n        return dbPromise.then(db => {\n            const tx = db.transaction(dbName, 'readwrite');\n            tx.objectStore(dbName).put(val, key);\n            return tx.complete;\n        });\n    },\n    delete(dbName, key) {\n        return dbPromise.then(db => {\n            const tx = db.transaction(dbName, 'readwrite');\n            tx.objectStore(dbName).delete(key);\n            return tx.complete;\n        });\n    },\n    clear() {\n        return dbPromise.then(db => {\n            const tx = db.transaction(dbName, 'readwrite');\n            tx.objectStore(dbName).clear();\n            return tx.complete;\n        });\n    },\n    keys() {\n        return dbPromise.then(db => {\n            const tx = db.transaction(dbName);\n            const keys = [];\n            const store = tx.objectStore(dbName);\n\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n            return tx.complete.then(() => keys);\n        })\n    }\n};\n\n\n// get a value\n// dbPromise.then((db) => {\n//     const tx = db.transaction('restaurant');\n//     const restaurantStore = tx.objectStore('restaurant');\n//     return restaurantStore.get('rest');\n// }).then((val) => {\n//     console.log('The value of \"rest\" is\", val');\n// });\n\n// set a value\n// dbPromise.then((db) => {\n//     const tx = db.transaction('restaurant', 'readwrite');\n//     const restaurantStore = tx.objectStore('restaurant');\n//     restaurantStore.put('restaurant_id', 'restaurant_obj');\n//     return tx.complete;\n// }).then((val) => {\n//     console.log('Added restaurant_obj to restaurant_id');\n// });\n\n// return all\n// dbPromise.then((db) => {\n//     const tx = db.transaaction('restaurant');\n//     const restStore = tx.objectStore('restaurant');\n//     const neighborhoodIdx = restStore.index('neighborhood');\n//     return neighborhoodIdx.getAll();\n// }).then((restaurants) => {\n//     console.log('indexed by neighborhood', restaurants);\n// });\n\n\n// // iterate through list\n// dbPromise.then((db) => {\n//     const tx = db.transaaction('restaurant');\n//     const restStore = tx.objectStore('restaurant');\n//     const neighborhoodIdx = restStore.index('neighborhood');\n//     return neighborhoodIdx.openCursor();\n// }).then(function logRestaurant(cursor) {\n//     if (!cursor) return;\n//     console.log('cursored at:', cursor.value.name);\n\n//     // update: cursor.update\n//     // delete: cursor.delete\n//     // skip: cursor.advance(numtoAdvance)\n//     return cursor.continue().then(logRestaurant);\n// }).then(() => {\n//     console.log('done cursoring');\n// });\n"]}