{"version":3,"sources":["node_modules/idb/lib/idb.js","js/idb/index.js","js/main.js"],"names":["dbPromise","idb","open","upgradeDb","oldVersion","restaurantStore","createObjectStore","createIndex","restaurantIdb","get","key","then","db","transaction","objectStore","set","val","tx","put","complete","delete","clear","keys","store","iterateKeyCursor","iterateCursor","call","cursor","push","continue","restaurants","neighborhoods","cuisines","newMap","markers","fetchNeighborhoods","DBHelper","error","console","self","fillNeighborhoodsHTML","select","document","getElementById","setAttribute","forEach","option","createElement","innerHTML","neighborhood","value","append","fetchCuisines","fillCuisinesHTML","cuisine","initMap","L","map","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","id","addTo","updateRestaurants","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","ul","marker","remove","div","createRestaurantHTML","restaurant","addMarkersToMap","divWrapper","classList","add","picture","image","className","pathPrefix","imageUrlForRestaurant","src","smSrc","media","srcset","lgSrc","alt","name","appendChild","address","href","urlForRestaurant","mapMarkerForRestaurant","on","onClick","window","location","options","url"],"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","file":"main.d42daa6e.map","sourceRoot":"..","sourcesContent":["'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","import idb from 'idb';\n\n// set up db store\nconst dbPromise = idb.open('db', 0, (upgradeDb) => {\n    switch(upgradeDb.oldVersion) {\n        case 0:\n            const restaurantStore = upgradeDb.createObjectStore('restaurant');\n            restaurantStore.createIndex('name', 'cuisine', 'neighborhood');\n\n    }\n});\n\nconst restaurantIdb = {\n    get(key) {\n        return dbPromise.then(db => {\n            db.transaction('restaurant')\n                .objectStore('restaurant').get(key)\n        });\n    },\n    set(key, val) {\n        return dbPromise.then(db => {\n            const tx = db.transaction('restaurant', 'readwrite');\n            tx.objectStore('restaurant').put(val, key);\n            return tx.complete;\n        });\n    },\n    delete(key) {\n        return dbPromise.then(db => {\n            const tx = db.transaction('restaurant', 'readwrite');\n            tx.objectStore('restaurant').delete(key);\n            return tx.complete;\n        });\n    },\n    clear() {\n        return dbPromise.then(db => {\n            const tx = db.transaction('restaurant', 'readwrite');\n            tx.objectStore('restaurant').clear();\n            return tx.complete;\n        });\n    },\n    keys() {\n        return dbPromise.then(db => {\n            const tx = db.transaction('restaurant');\n            const keys = [];\n            const store = tx.objectStore('restaurant');\n\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n            return tx.complete.then(() => keys);\n        })\n    }\n};\n\n\n// get a value\n// dbPromise.then((db) => {\n//     const tx = db.transaction('restaurant');\n//     const restaurantStore = tx.objectStore('restaurant');\n//     return restaurantStore.get('rest');\n// }).then((val) => {\n//     console.log('The value of \"rest\" is\", val');\n// });\n\n// set a value\n// dbPromise.then((db) => {\n//     const tx = db.transaction('restaurant', 'readwrite');\n//     const restaurantStore = tx.objectStore('restaurant');\n//     restaurantStore.put('restaurant_id', 'restaurant_obj');\n//     return tx.complete;\n// }).then((val) => {\n//     console.log('Added restaurant_obj to restaurant_id');\n// });\n\n// return all\n// dbPromise.then((db) => {\n//     const tx = db.transaaction('restaurant');\n//     const restStore = tx.objectStore('restaurant');\n//     const neighborhoodIdx = restStore.index('neighborhood');\n//     return neighborhoodIdx.getAll();\n// }).then((restaurants) => {\n//     console.log('indexed by neighborhood', restaurants);\n// });\n\n\n// // iterate through list\n// dbPromise.then((db) => {\n//     const tx = db.transaaction('restaurant');\n//     const restStore = tx.objectStore('restaurant');\n//     const neighborhoodIdx = restStore.index('neighborhood');\n//     return neighborhoodIdx.openCursor();\n// }).then(function logRestaurant(cursor) {\n//     if (!cursor) return;\n//     console.log('cursored at:', cursor.value.name);\n\n//     // update: cursor.update\n//     // delete: cursor.delete\n//     // skip: cursor.advance(numtoAdvance)\n//     return cursor.continue().then(logRestaurant);\n// }).then(() => {\n//     console.log('done cursoring');\n// });\n\n","import dbPromise from './idb';\r\nlet restaurants,\r\n  neighborhoods,\r\n  cuisines\r\nvar newMap\r\nvar markers = []\r\n\r\n// /**\r\n//  * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n//  */\r\n// document.addEventListener('DOMContentLoaded', (event) => {\r\n//   initMap(); // added \r\n//   fetchNeighborhoods();\r\n//   fetchCuisines();\r\n// });\r\n\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\nfetchNeighborhoods = () => {\r\n  DBHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n    if (error) { // Got an error\r\n      console.error(error);\r\n    } else {\r\n      self.neighborhoods = neighborhoods;\r\n      fillNeighborhoodsHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nfillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById('neighborhoods-select');\r\n  select.setAttribute('aria-label', \"neighborhood select\");\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\nfetchCuisines = () => {\r\n  DBHelper.fetchCuisines((error, cuisines) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.cuisines = cuisines;\r\n      fillCuisinesHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nfillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById('cuisines-select');\r\n  select.setAttribute('aria-label', \"cuisines select\");\r\n\r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Initialize leaflet map, called from HTML.\r\n */\r\ninitMap = () => {\r\n  self.newMap = L.map('map', {\r\n        center: [40.722216, -73.987501],\r\n        zoom: 12,\r\n        scrollWheelZoom: false\r\n      });\r\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\r\n    mapboxToken: 'pk.eyJ1IjoidGlmZmFueWgxMDEiLCJhIjoiY2ppcTltYWdjMDB4dTNsbzF2MTBrd3U5NyJ9.p99H31XzJEgUSu1jJYRZDg',\r\n    maxZoom: 18,\r\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n      '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n      'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n    id: 'mapbox.streets'\r\n  }).addTo(newMap);\r\n\r\n  updateRestaurants();\r\n}\r\n/* window.initMap = () => {\r\n  let loc = {\r\n    lat: 40.722216,\r\n    lng: -73.987501\r\n  };\r\n  self.map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: loc,\r\n    scrollwheel: false\r\n  });\r\n  updateRestaurants();\r\n} */\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nupdateRestaurants = () => {\r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n\r\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      resetRestaurants(restaurants);\r\n      fillRestaurantsHTML();\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nresetRestaurants = (restaurants) => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById('restaurants-list');\r\n  ul.innerHTML = '';\r\n\r\n  // Remove all map markers\r\n  if (self.markers) {\r\n    self.markers.forEach(marker => marker.remove());\r\n  }\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n}\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nfillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const div = document.getElementById('restaurants-list');\r\n  restaurants.forEach(restaurant => {\r\n    div.append(createRestaurantHTML(restaurant));\r\n  });\r\n  addMarkersToMap();\r\n}\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\ncreateRestaurantHTML = (restaurant) => {\r\n  const divWrapper = document.createElement('div');\r\n  divWrapper.classList.add(\"restaurant-element\");\r\n\r\n  const div = document.createElement('a')\r\n  divWrapper.append(div);\r\n\r\n  const picture = document.createElement('picture');\r\n  \r\n  const image = document.createElement('img');\r\n  image.className = 'restaurant-img';\r\n  pathPrefix = DBHelper.imageUrlForRestaurant(restaurant);\r\n  image.src = `${pathPrefix}-large.jpg`;\r\n  \r\n  const smSrc = document.createElement('source');\r\n  smSrc.media = '(max-width: 450px)';\r\n  smSrc.srcset = `${pathPrefix}-320x240.jpg`;\r\n  \r\n  \r\n  const lgSrc = document.createElement('source');\r\n  lgSrc.media = '(min-width: 751px)';\r\n  lgSrc.srcset = `${pathPrefix}-large.jpg, ${pathPrefix}-1600_large_2x.jpg 2x`;\r\n  \r\n  image.alt = smSrc.alt = lgSrc.alt = restaurant.name;\r\n  picture.appendChild(smSrc);\r\n  picture.appendChild(lgSrc);\r\n  picture.appendChild(image);\r\n  div.append(picture);\r\n\r\n\r\n  const name = document.createElement('h2');\r\n  name.innerHTML = restaurant.name;\r\n  div.append(name);\r\n\r\n  const neighborhood = document.createElement('p');\r\n  neighborhood.innerHTML = restaurant.neighborhood;\r\n  div.append(neighborhood);\r\n\r\n  const address = document.createElement('p');\r\n  address.innerHTML = restaurant.address;\r\n  div.append(address);\r\n\r\n  // const more = document.createElement('a');\r\n  // more.innerHTML = 'View Details';\r\n  div.href = DBHelper.urlForRestaurant(restaurant);\r\n  // div.append(more)\r\n\r\n  return divWrapper;\r\n}\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\naddMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.newMap);\r\n    marker.on(\"click\", onClick);\r\n    function onClick() {\r\n      window.location.href = marker.options.url;\r\n    }\r\n    self.markers.push(marker);\r\n  });\r\n\r\n} \r\n/* addMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      window.location.href = marker.url\r\n    });\r\n    self.markers.push(marker);\r\n  });\r\n} */\r\n\r\nexport default {\r\n  initMap,\r\n  fetchNeighborhoods,\r\n  fetchCuisines\r\n}"]}